name: CI/CD

on:
  push:
    tags:
      - "v*"
env:
  DOCKERHUB_REPO: youlift/youlift_frontend
  GITHUB_REPO: fullstacktf/fitness-frontend
  CONTAINER_NAME: youLift-frontend

jobs:
  linters_and_tests:
    name: Linters and Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use node.js 14.15.0
        uses: actions/setup-node@v1
        with:
          node-version: "14.15.0"

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run linters
        run: |
          cd frontend
          npm run eslint

      - name: Run tests
        run: |
          cd frontend
          npm run test

  release:
    name: Create Release
    needs: linters_and_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Get PRs of the new release
        id: pulls
        uses: raulrodrigueztorres/release-pulls-titles@v1.0.0
        with:
          repository: ${{ env.GITHUB_REPO }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ### Changes in this release:
                ${{ steps.pulls.outputs.titles }}
          draft: false
          prerelease: false

  build:
    name: Build
    needs: release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -c2-)
        shell: bash

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:${{ steps.get_version.outputs.VERSION }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Executing remote command
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker pull ${{ env.DOCKERHUB_REPO }}:${{ needs.build.outputs.tag }}
            docker stop ${{ env.CONTAINER_NAME }}
            docker rm ${{ env.CONTAINER_NAME }}
            docker run -d --name ${{ env.CONTAINER_NAME }} -p 3000:80 ${{ env.DOCKERHUB_REPO }}:${{ needs.build.outputs.tag }}
